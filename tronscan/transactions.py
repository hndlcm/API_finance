import requests
import time
import gspread
from oauth2client.service_account import ServiceAccountCredentials
from datetime import datetime

# ‚öôÔ∏è –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –¥–æ—Å—Ç—É–ø—É –¥–æ Google Sheets
scope = ["https://spreadsheets.google.com/feeds", "https://www.googleapis.com/auth/drive"]
creds = ServiceAccountCredentials.from_json_keyfile_name("../api-finanse-de717294db0b.json", scope)
client = gspread.authorize(creds)

# –í—ñ–¥–∫—Ä–∏–≤–∞—î–º–æ —Ç–∞–±–ª–∏—Ü—é –∑–∞ URL —Ç–∞ –∞—Ä–∫—É—à –∑–∞ –Ω–∞–∑–≤–æ—é
spreadsheet = client.open_by_url(
    "https://docs.google.com/spreadsheets/d/1Fg9Fo4TLqc0KYbC_GHBRccFZg8a5g9NJPfyMoSLSKM8/edit?usp=sharing"
)
worksheet = spreadsheet.worksheet("–ê—Ä–∫—É—à1")

# –ê–¥—Ä–µ—Å–∞ –¥–ª—è –∑–∞–ø–∏—Ç—É —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π TRON
address = "TRoJdqkhtJGpWVsvC67jk4Cp8FDAhQL1LE"
limit = 50
start = 0
row_data = []

while True:
    url = (
        f"https://apilist.tronscan.org/api/transaction"
        f"?sort=-timestamp&count=true&limit={limit}&start={start}&address={address}"
    )
    response = requests.get(url)
    if response.status_code != 200:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Ç—ñ: —Å—Ç–∞—Ç—É—Å {response.status_code}")
        break

    data = response.json()
    transactions = data.get("data", [])

    if not transactions:
        print("‚úÖ –£—Å—ñ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó –æ—Ç—Ä–∏–º–∞–Ω–æ.")
        break

    for tx in transactions:
        # –§–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è timestamp
        timestamp = datetime.fromtimestamp(tx["timestamp"] / 1000).strftime("%Y-%m-%d %H:%M:%S")
        token = tx.get("tokenType", "")
        owner = tx.get("ownerAddress", "")
        method = tx.get("trigger_info", {}).get("methodName", "")

        value_raw = tx.get("trigger_info", {}).get("parameter", {}).get("_value")
        try:
            amount = int(value_raw) / 1_000_000 if value_raw else int(tx.get("amount", "0")) / 1_000_000
        except Exception:
            amount = 0

        try:
            fee = int(tx.get("cost", {}).get("fee", 0)) / 1_000_000
        except Exception:
            fee = 0

        to_address = tx.get("toAddress", "")
        tx_hash = tx.get("hash", "")

        # –ü—ñ–¥–≥–æ—Ç–æ–≤–∫–∞ —Ä—è–¥–∫–∞ –∑ 25 –∫–æ–ª–æ–Ω–∫–∞–º–∏ (A-Y)
        row = [""] * 25
        row[0] = timestamp  # A
        row[1] = token      # B
        row[3] = owner      # D
        row[4] = method     # E
        row[6] = amount     # G
        row[8] = fee        # I
        row[13] = to_address  # N
        row[16] = tx_hash     # Q

        row_data.append(row)

    print(f"üîÑ –û—Ç—Ä–∏–º–∞–Ω–æ {len(transactions)} —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π")
    start += limit
    time.sleep(0.4)

# --- –ó–Ω–∞—Ö–æ–¥–∏–º–æ –ø–µ—Ä—à–∏–π –≤—ñ–ª—å–Ω–∏–π —Ä—è–¥–æ–∫, —â–æ–± –Ω–µ –ø–µ—Ä–µ–∑–∞–ø–∏—Å—É–≤–∞—Ç–∏ –¥–∞–Ω—ñ ---
existing_records = len(worksheet.get_all_values())
start_row = existing_records + 1  # –∑–∞–ø–∏—Å—É—î–º–æ –ø—ñ—Å–ª—è –æ—Å—Ç–∞–Ω–Ω—å–æ–≥–æ —Ä—è–¥–∫–∞

# --- –ó–∞–ø–∏—Å—É—î–º–æ –¥–∞–Ω—ñ, –ø–æ—á–∏–Ω–∞—é—á–∏ –∑ start_row ---
worksheet.update(f"A{start_row}:Y{start_row + len(row_data) - 1}", row_data)

print(f"\nüìä –£—Å–ø—ñ—à–Ω–æ –¥–æ–¥–∞–Ω–æ {len(row_data)} —Ä—è–¥–∫—ñ–≤ —É Google –¢–∞–±–ª–∏—Ü—é –ø–æ—á–∏–Ω–∞—é—á–∏ –∑ —Ä—è–¥–∫–∞ {start_row}.")
